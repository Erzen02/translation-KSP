CONTRACT_TYPE
{
    name = ExplorationPlus-Gemini
    title = 天体 @/targetBody1 の周回軌道からの有人帰還を行う
	genericTitle = 以前に周回軌道に到達した天体からの帰還
    group = ExplorationPlus
	description = 我々宇宙センターは、常に新しいフロンティアを開拓することに積極的でありたいと考えている。 この精神のもと、今こそ @/targetBody1 へ出かけよう、しかし戻ってくる必要もある!
    genericDescription = 天体からの帰還を行い、我々の驚異的な科学力の進歩を見せつけろ!
    synopsis = 天体 @/targetBody1 への有人往還飛行を行う
    completedMessage = やった！最後のフロンティアなんて存在しないのさ。
    minExpiry = 1
    maxExpiry = 7
    deadline = 0
    cancellable = true
    declinable = true
    prestige = Exceptional
    targetBody = @/targetBody1
    rewardScience = 6
    rewardReputation = 12.0
    rewardFunds = 88000
    failureReputation = 0.0
    failureFunds = 0.0
    advanceFunds = 0.0
    DATA
    {
        type = CelestialBody
		uniquenessCheck = CONTRACT_ACTIVE
        targetBody1 = OrbitedBodies().Where(b => !b.HaveReturnedFrom() && b.HasSurface() && !b.IsHomeWorld()).SelectUnique()
		title = 天体を周回したが、まだ帰還していない
    }

	DATA
	{
		type = string
		requiredValue = true
		VesselVariableName = "OrbitReturner" + @/targetBody1.Name()
		hidden = true
	}

	PARAMETER
	{
		name = ReturnerDefine
		type = VesselParameterGroup
		define = @/VesselVariableName
		hideVesselName = true
		dissassociateVesselsOnContractCompletion = true
		disableOnStateChange = true
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			disableOnStateChange = false
			title = 天体 @/targetBody1 の周回軌道に到達する
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
			disableOnStateChange = false
			title = カーバルが搭乗している必要がある
		}
	}

	PARAMETER
	{
		name = ReturnerCatch
		type = VesselParameterGroup
		vessel = @/VesselVariableName

		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			title = 母星に帰還する
		}
	}


    REQUIREMENT
    {
        name = ReturnFromOrbit
        type = ReturnFromOrbit
		targetBody = @/targetBody1
		checkType = Manned
		invertRequirement = true
		title = カーバルが搭乗した状態で目標天体の軌道から帰還したことがない
    }
}

