// Contract for sending tourists to an asteroid.
//   Author: nightingale

CONTRACT_TYPE
{
    name = Tourism_Asteroid
    group = Tourism

    sortKey = 05.Asteroid
    genericTitle = 小惑星に観光客を連れて行く
    genericDescription = 小惑星を観光に使ったらどうでしょう？ 月に着陸しなくても、観光客に大きな岩を間近に見てもらうことができるのでは？

    title = 観光客 @Tourism:touristCount.Print() @Tourism:tourists を小惑星に連れていく
    description = 小惑星がどんなものか、間近で見てみたいという冒険家もいることでしょう
    synopsis = 観光客 @Tourism:touristCount.Print() @Tourism:tourists を小惑星に連れて行き、無事に戻る
    completedMessage = 観光客 @Tourism:tourists は素晴らしい時間を過ごしました!

    // Level 3 prestige
    prestige = Exceptional

    targetBody = HomeWorld()

    agent = Kerbal Space Tourism

    // Can only have two at a time
    maxSimultaneous = 2

    // Contract rewards
    rewardFunds = 50000 + 200000.0 * @Tourism:touristCount + Random(0.0, 50000.0)
    rewardReputation = 1.0
    failureReputation = 20.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = 観光客 @Tourism:tourists を小惑星に連れていく

        duration = 15m

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            minAltitude = @/targetBody.AtmosphereAltitude() + 5000
        }

        PARAMETER
        {
            name = PartValidation
            type = PartValidation

            partModule = ModuleAsteroid
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @Tourism:touristCount
    }

    BEHAVIOUR
    {
        name = Expression
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            TouristCount = TouristCount + @Tourism:touristCount
            TouristAsteroidCount = TouristAsteroidCount + @Tourism:touristCount
        }
    }

    // Need a maxed out tracking station
    REQUIREMENT
    {
        name = Facility
        type = Facility

        facility = TrackingStation
        minLevel = 3
    }

    REQUIREMENT
    {
        name = AnyStarter
        type = Any

        hideChildren = true
        title = 宇宙観光ツアーを開始している

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = TourismContract
        }

        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract

            contractType = Tourism_FirstTourist
        }
    }
}
