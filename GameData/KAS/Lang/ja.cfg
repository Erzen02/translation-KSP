// Version: 8
// Do NOT change the version unless a new string is added or an existing one was deleted.
// A simple string update is not a new version! The version number is used to keep all
// the localizations in sync. The EN-US localization file is the primary file, and all the
// other languages should catch-up as the version is increasing.
// Authors: Supercheese, IgorZ
// Last updated: 06/02/2022



// Japanese translation by Erzen (https://github.com/Erzen02)
// v1.0
Localization
{
	ja
	{

		// ********** Part: KAS.CH1

		#KAS_CH1_Part_title = CH-1 ケーブルフック
		#KAS_CH1_Part_manufacturer = KASラボ株式会社
		#KAS_CH1_Part_description = ケーブルが引っ掛けられるフック。このフックがあれば、「モノをつないで1つにする」ことができます。
		#KAS_CH1_Part_tags = KIS KAS cable rope tie cck-kas

		// ********** Part: KAS.GrapplingHook

		#KAS_GrapplingHook_Part_title = HG-02 グラップリングフック
		#KAS_GrapplingHook_Part_manufacturer = KAS
		#KAS_GrapplingHook_Part_description = 宇宙で「銛を放つ」というアイデアは誰もが気に入りました。しかし、ステーションのモジュールは金属でできているため、銛では対応できません。そこでジーンは、銛を吸盤に置き換えるという解決策を提案しました。これは上手くいったの ですが、もはや銛ではなくなってしまいました。
		#KAS_GrapplingHook_Part_tags = KIS KAS hook harpoon attachment winch eject cck-kas
		#KAS_GrapplingHook_Part_DetachDartEventText = グラップリングデバイスを取り外す

		// ********** Part: KAS.Harpoon

		#KAS_Harpoon_Part_title = HP-01 ハープーン
		#KAS_Harpoon_Part_manufacturer = KAS
		#KAS_Harpoon_Part_description = このアイデアは、休暇から帰ってきたビルが提案したものです。彼は、休暇で海に出たとき、銛で狩りをしました。もちろん、何も当たりませんでしたが、「銛を撃ちたい」という思いは消えなかったのです。宇宙の小惑星ではいけませんか？そこで登場したのが、このスペースハープーンです。ちなみに、惑星にも銛を撃ち込むことができます。
		#KAS_Harpoon_Part_tags = KIS KAS hook harpoon attachment winch eject cck-kas
		#KAS_Harpoon_Part_DetachDartEventText = 銛を取り外す

		// ********** Part: KAS.JS1

		#KAS_JS1_Part_title = JS-1 ジョイントソケット
		#KAS_JS1_Part_manufacturer = KASラボ株式会社
		#KAS_JS1_Part_description = しっかりと接続でき、資源の移動も可能な多目的ソケットです! 取り付けには長年の経験を積んだ技術者が必要ですが、一度取り付けてしまえば、清掃員でも器材の接続に使用できます。
		#KAS_JS1_Part_tags = KIS KAS pipe tube cck-kas

		// ********** Part: KAS.PCB1

		#KAS_PCB1_Part_title = PCB-1 携帯用ケーブルブレーシング
		#KAS_PCB1_Part_manufacturer = KASラボ株式会社
		#KAS_PCB1_Part_description = これは手動で操作するシンプルなウインチで、小さなスプールのスチールケーブルが付いており、遠くない距離であれば物を繋ぐことができます。ただし、ケーブルを取り付けるフックが相手の船になければならないので、このウインチは問題の半分しか解決できていません。
		#KAS_PCB1_Part_tags = KIS KAS cable rope tie cck-kas
		#KAS_PCB1_Part_LinkBreak = リンク解除
		#KAS_PCB1_Part_LinkStart = リンク

		// ********** Part: KAS.PortPylon

		#KAS_PortPylon_Part_title = GP-20 パイロン
		#KAS_PortPylon_Part_manufacturer = KASラボ株式会社
		#KAS_PortPylon_Part_description = RTS-1製品ラインは大成功を収めましたが、パイプの長さが足りないという苦情もありました。そこで、軽量なパイロンにパイプソケットを内蔵し、伸展装置として機能させることで、長距離のリソースリンクを連結することが可能になりました。ジェブは本当は中空の内部にカーバ・コーラの冷蔵庫を入れたかったのですが、20kgという厳しい質量制限のため、研究開発部に却下されてしまいました。
		#KAS_PortPylon_Part_tags = KAS resource fuel transfer cck-kas

		// ********** Part: KAS.PortPylonPwr

		#KAS_PortPylonPwr_Part_title = BGP-400 パイロン・オン・ステロイド
		#KAS_PortPylonPwr_Part_manufacturer = KASラボ株式会社
		#KAS_PortPylonPwr_Part_description = このパーツのデザインは、GP-20にインスパイアされたもので、パイロンの内部容積を本当に利用できるのか？というものでした。そこで、Z-100バッテリーと簡単な制御モジュールを搭載することにしました。ジェブがリクエストしていたカーバ・コーラの冷蔵庫のようなカッコよさはありませんが、実用性は十分です。電池はゴミ箱から回収したものではなく、最高級のものを使用していますのでご安心ください。
		#KAS_PortPylonPwr_Part_tags = KAS resource fuel transfer cck-kas

		// ********** Part: KAS.RTS1

		#KAS_RTS1_Part_title = RTS-1 資源中継装置
		#KAS_RTS1_Part_manufacturer = KASラボ株式会社
		#KAS_RTS1_Part_description = このパイプは、船と船の間で資源を移動させるためのものです。直径はそれほど大きくありませんが、かつて緑色の小人が言ったように、"大きさは重要ではない "のです。特許技術により、岩石、燃料、お菓子、カーバルなど、様々なものを移送することができます。後者の場合、保証は無効となります。
		#KAS_RTS1_Part_tags = KIS KAS resource fuel transfer cck-kas

		// ********** Part: KAS.TB60

		#KAS_TB60_Part_title = TB-60 トウ・バー
		#KAS_TB60_Part_manufacturer = KASラボ株式会社
		#KAS_TB60_Part_description = 自力では移動できない船舶を曳航するためのシンプルなソリューションです。単純なロープを使用した場合、制動時や操船時に被牽引船が牽引船に衝撃を与える可能性がありますが、トウ・バーを使用すればそのようなことはありません。また、必要に応じて被牽引船舶の操船を補助することもできます。アクティブステアリングが機能しないので、電池は常に新しい状態にしておいてください。
		#KAS_TB60_Part_tags = KIS KAS pipe tube tow towbar cck-kas
		#KAS_TB60_Part_LinkBreak = 機体を接続解除
		#KAS_TB60_Part_LinkStart = 機体に接続
		#KAS_TB60_Part_Park_Forward = パーク: 前方
		#KAS_TB60_Part_Park_Up = パーク: 上

		// ********** Part: KAS.TJ1

		#KAS_TJ1_Part_title = TJ-1 固定伸縮式ジョイント
		#KAS_TJ1_Part_manufacturer = KASラボ株式会社
		#KAS_TJ1_Part_description = 2隻の船舶を強固に連結できるシンプルな伸縮式支柱です。最大接続距離はかなり短いですが、その強度は十分です。このデザインは、ジェブが古道具屋で購入した自撮り棒からヒントを得たものです。
		#KAS_TJ1_Part_tags = KIS KAS pipe tube cck-kas
		#KAS_TJ1_Part_LinkBreak = 機体を接続解除
		#KAS_TJ1_Part_LinkStart = 機体に接続
		#KAS_TJ1_Part_Park_Down = パーク: 下
		#KAS_TJ1_Part_Park_Forward = パーク: 前方
		#KAS_TJ1_Part_Park_Up = パーク: 上

		// ********** Part: KAS.TJ2

		#KAS_TJ2_Part_title = TJ-2 フリー伸縮ジョイント
		#KAS_TJ2_Part_manufacturer = KASラボ株式会社
		#KAS_TJ2_Part_description = TJ-1"セルフィースティック"と同じものですが、ヒンジのロックが解除されているのが特徴です。接続された器同士を離し、かつ動きを制限しすぎない、まさにベストソリューションです。
		#KAS_TJ2_Part_tags = KIS KAS pipe tube cck-kas
		#KAS_TJ2_Part_LinkBreak = 機体を接続解除
		#KAS_TJ2_Part_LinkStart = 機体に接続
		#KAS_TJ2_Part_Park_Down = パーク: 下
		#KAS_TJ2_Part_Park_Forward = パーク: 前方
		#KAS_TJ2_Part_Park_Up = パーク: 上

		// ********** Part: KAS.W1

		#KAS_W1_Part_title = W-50 ウィンチ
		#KAS_W1_Part_manufacturer = KASラボ株式会社
		#KAS_W1_Part_description = 古代の賢者はかつてこう言いました。「我に軽いソケットを与えよ、そしてウィンチでカービンを引っ張るのだ」。このウインチはそれほど強力なものではありませんが、かなりかさばる船を持ち上げたり、牽引したりすることができます。接続する機体に互換性のあるソケットがを着けることを忘れずに。また、使用する船に十分な電力があることを確認してください。このウィンチは電気を欲しがります!
		#KAS_W1_Part_tags = KIS KAS winch cable connector cck-kas

		// ********** Part: KAS.W2

		#KAS_W2_Part_title = HW-80 ウィンチ
		#KAS_W2_Part_manufacturer = KASラボ株式会社
		#KAS_W2_Part_description = W-50ウインチモデルの重量級バージョンです。ケーブルを増設し、接続強度を向上させたのが特徴です。ただし、まだカービンを引っ張ることはできません。注:ウインチをウィッチに使用した場合、保証は無効となります。どのウインチをどのウィッチ、もしくはどのウィッチをどのウインチに使っても同様です。
		#KAS_W2_Part_tags = KIS KAS winch cable connector heavyduty cck-kas

		// ********** Type: KAS.AbstractJoint, KSPDev Messages

		// Message to display when the link cannot be established because it's too short.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too short: 1.22 m < 2.33 m
		#kasLOC_00000 = リンクが短すぎます: <<1>> < <<2>>
		// Message to display when the link cannot be established because it's too long.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too long: 2.33 m > 1.22 m
		#kasLOC_00001 = リンクが長すぎます: <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the SOURCE part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit reached: 3° > 2.5°
		#kasLOC_00002 = リンク元の角度が制限を超えました: <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the TARGET part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit reached: 3° > 2.5°
		#kasLOC_00003 = リンク先の角度が制限を超えました: <<1>> > <<2>>
		// Info string in the editor for the link break force setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link break force: 1.2 kN
		#kasLOC_00004 = リンクが破損する際の力: <<1>>
		// Info string in the editor for the link break torque setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link torque force: 1.2 kN
		#kasLOC_00005 = リンクが破損する際のトルク: <<1>>
		// Info string in the editor for the minimum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Minimum link length: 1.22 m
		#kasLOC_00006 = 最小リンク長: <<1>>
		// Info string in the editor for the maximum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Maximum link length: 1.22 m
		#kasLOC_00007 = 最大リンク長: <<1>>
		// Info string in the editor for the maximum allowed angle at the source.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit: 1.2°
		#kasLOC_00008 = リンク元との角度制限: <<1>>
		// Info string in the editor for the maximum allowed angle at the target.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit: 1.2°
		#kasLOC_00009 = リンク先との角度制限: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_00010 = KAS ジョイント

		// ********** Type: KAS.AbstractPipeRenderer, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_07000 = リンクを妨害している: <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_07001 = リンクが表面と衝突している

		// ********** Type: KAS.ControllerWinchRemote, KSPDev Messages

		// The title of the remote control dialog. It also gives a hint on the keyboard
		// sequence that brings the GUI up.
		// Argument <<1>> is the keyboard even of type KeyboardEventType.
		#kasLOC_11000 = ウィンチ遠隔制御 (<<1>>)
		// The caption of the button that triggers cable release.
		#kasLOC_11001 = 開放
		// The GUI hint to explain the effect of the release button.
		#kasLOC_11002 = コネクタを解除し、ケーブル長を最大に設定する
		// The caption of the button that stretches the cable.
		#kasLOC_11003 = ストレッチ
		// The GUI hint to explain the effect of the stretch button.
		#kasLOC_11004 = ケーブルの長さを実際の距離に設定する
		// The caption of the button that detaches the cable from the target.
		#kasLOC_11005 = 切り離し
		// The GUI hint to explain the effect of the detach button.
		#kasLOC_11006 = ターゲットパーツからケーブルを取り外す
		// The caption of the button that closes the GUI dialog.
		#kasLOC_11007 = 閉じる
		// The GUI hint to explain the effect of the close button.
		#kasLOC_11008 = GUIを閉じる
		// The caption for the toggle control (button style) which tells if the winch should
		// be highlighted in the scene. It's better keep the text as short as possible.
		#kasLOC_11009 = H
		// The GUI hint to explain the effect of toggling the control.
		#kasLOC_11010 = ウィンチをハイライト
		// The text for the winch status in which it cannot be remotely operated for any
		// reason.
		#kasLOC_11011 = <color=red>オフライン</color>
		// The GUI hint to explain the OFFLINE state.
		#kasLOC_11012 = ウインチと接触できなません。機体は制御可能ですか？
		// The text for the winch status that tells that the main winch attach node is
		// occupied by an incompatible (non-KAS) part.
		#kasLOC_11013 = <color=red>ブロックされた</color>
		// The GUI hint to explain the BLOCKED state.
		#kasLOC_11014 = ウインチアタッチノードが他の部品で塞がれている
		// The text for the winch status that tells that the cable connector is locked to
		// the winch, and the cable length is zero.
		#kasLOC_11015 = <color=#00ff00>収納された</color>
		// The GUI hint to explain the RETRACTED state.
		#kasLOC_11016 = コネクタがウインチにロックされている
		// The GUI hint of the button that triggers retracting of the cable. The cable will
		// be retracting until the motor status is changed or the connector get locked.
		#kasLOC_11017 = ケーブルの巻き取りを開始
		// The GUI hint of the button that triggers deploying of the cable. The cable will
		// be deploying until the motor status is changed.
		#kasLOC_11018 = ケーブルの延長を開始
		// The GUI hint of the button that retracts the cable. The cable will be retracting
		// as long as the button is pressed.
		#kasLOC_11019 = ケーブルを巻き取る
		// The GUI hint of the button that extends the cable. The cable will be extending as
		// long as the button is pressed.
		#kasLOC_11020 = ケーブルを延長する
		// The GUI hint to show for the control that changes the motor speed. It's the
		// maximum speed which the motor can reach when retracting or extending the cable.
		#kasLOC_11021 = モーター回転数設定
		// The GUI hint to show for the area which displays two values: the deployed cable
		// length and the real distance between the winch and the target (connector or
		// part). The values are presented as a pair, separated by symbol '/'.
		#kasLOC_11022 = ケーブルの展開長/実際の長さ
		// The GUI hint to show for the area which displays two values: the current motor
		// speed and the maximum possible motor speed. The values are presented as a pair,
		// separated by symbol '/'.
		#kasLOC_11023 = 現在のモーター回転数／モーター回転数設定
		// The string to present when the dialog is opened, but no KAS winches found in the
		// scene.
		#kasLOC_11024 = ウインチが見当たりません!
		// The formatter string for the cable lengths when the cable is *not* under strain.
		// I.e. its actual length is not greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<1>> is the real cable length of type DistanceType.
		#kasLOC_11025 = <<1>> / <<2>>
		// The formatter string for the cable lengths when the cable *is* under strain. I.e.
		// its actual length is greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<2>> is the real cable length of type DistanceType.
		#kasLOC_11026 = <<1>> / <color=magenta><<2>></color>
		// The formatter string for the winch motor speed.
		// Argument <<1>> is the current motor speed type VelocityType.
		// Argument <<2>> is the settings for the desired motor speed of type VelocityType.
		#kasLOC_11027 = <<1>> / <<2>>

		// ********** Type: KAS.KASJointCableBase, KSPDev Messages

		// Info string in the editor for the cable spring force setting.
		// Argument <<1>> is the force of type ForceType.
		// Example usage:
		// Spring force: 1.2 kN
		#kasLOC_09000 = バネの力: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_09001 = KAS ケーブル

		// ********** Type: KAS.KASJointTowBar, KSP Events

		// A context menu event that starts the locking process on a linked vessel.
		#kasLOC_05014 = ロックを開始
		// A context menu event that disables the locking of the tow bar joints and turns
		// off the active steering mode.
		#kasLOC_05015 = 接続をアンロック
		// A context menu event that enables the active steering mode.
		#kasLOC_05016 = アクティブステアリングの有効化
		// A context menu event that disables the active steering mode.
		#kasLOC_05017 = アクティブステアリングを無効にする

		// ********** Type: KAS.KASJointTowBar, KSP Fields

		// A context menu item that displays the current status of the bar locking.
		#kasLOC_05010 = ロック状態
		// A context menu item that displays the current steering status.
		#kasLOC_05011 = ステアリングの状態
		// A context menu item that displays and allows changing the strength of the
		// steering commands, that the tow bar sends to the linked vessel.
		#kasLOC_05012 = ステアリング感度
		// A context menu item that displays and allows changing the direction of the
		// steering commands.
		#kasLOC_05013 = ステアリング: 方向
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the exact form as they've emitted for the source vessel.
		#kasLOC_05018 = 通常
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the inverted form relative to the source vessel.
		#kasLOC_05019 = 反転

		// ********** Type: KAS.KASJointTowBar, KSPDev Messages

		// Message to display when a tow bar is not locked but the locking process has been
		// started. The <<1>> argument shows the current locking error and is formatted as
		// an angle type.
		// Example usage:
		// Tow bar is locking: diff 1.5°
		#kasLOC_05000 = トウ・バーがロックされている: 角度差 <<1>>
		// Message to display when a tow bar locking process successfully ends with locking.
		#kasLOC_05001 = トウ・バーがロックされた!
		// A string in the context menu that tells that the active steering mode is not
		// enabled.
		#kasLOC_05002 = 無効化された
		// A string in the context menu that tells that the active steering mode is ready
		// and working.
		#kasLOC_05003 = 有効
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the bar's target vessel is currently under player's control.
		#kasLOC_05004 = ターゲットはアクティブな機体です
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the linked vessel is remotely controlled.
		#kasLOC_05005 = ターゲットは制御できない
		// A string in the context menu that tells that the active steering mode is
		// activated but cannot start working due to the constraints.
		#kasLOC_05006 = ロックされていない
		// A string in the context menu that tells that the bar joints are unlocked.
		#kasLOC_05007 = 無効化された
		// A string in the context menu that tells that the bar joints are locked.
		#kasLOC_05008 = ロックされた
		// A string in the context menu that tells that the bar joints are unlocked but the
		// part is trying to lock them.
		#kasLOC_05009 = ロック中

		// ********** Type: KAS.KASLinkResourceConnector, KSP Events

		// The context menu event that opens the resources transfer GUI.
		#kasLOC_12015 = GUIを開く

		// ********** Type: KAS.KASLinkResourceConnector, KSPDev Messages

		// The title of the resource transfer dialog.
		#kasLOC_12000 = 資源移送
		// The resource in the transfer options table. Its main purpose is dealing with the
		// Lingoona modifiers, applied to the resource name.
		// Argument <<1>> is the full localized resource name with the Lingoona modifiers
		// (if any).
		#kasLOC_12001 = <<1>>
		// The string to present for a fuel mixture component.
		// Argument <<1>> is the percent ratio of the component in the mixture of type
		// PercentType.
		// Argument <<2>> is the abbreviated localized resource name with the
		// Lingoonamodifiers (if any).
		// Example usage:
		// 45 % Ox
		#kasLOC_12002 = <<1>> <<2>>
		// The status string saying current and maximum amounts of the resource in the
		// vessel. The gui tags are suggested to define the minimum size of the text, to
		// avoid the dialog flickering when the resource is being transferred.
		// Argument <<1>> is the current amount of type CompactNumberType.
		// Argument <<1>> is the maximum amount (capacity) of type CompactNumberType.
		// Example usage:
		// 2.56 / 1,234
		#kasLOC_12003 = <<1>> / <<2>>
		// The information string that tells what is the selected or calculated transfer
		// speed is.
		#kasLOC_12004 = 現在の移送速度: <<1>> ユニット毎秒
		// The caption on the button that closes the transfer dialog.
		#kasLOC_12005 = ダイアログを閉じる
		// The string that tells which vessels owns the resource transfer part. Its stats
		// are displayed on the left side of the dialog.
		// Argument <<1>> is the name of the owner vessel.
		#kasLOC_12006 = 所有者機体 (左): <<1>>
		// The string that tells which vessels is connected to the resource transfer part.
		// Its stats are displayed on the right side of the dialog.
		// Argument <<1>> is the name of the connected vessel.
		#kasLOC_12007 = 接続された機体 (右): <<1>>
		// The hint to explain the mixture of the fuel components to transfer.
		// Argument <<1>> is the comma-separated list of the component names.
		#kasLOC_12008 = コンポーネントの組み合わせ: <<1>>
		// The caption for the control that enables the mode, which automatically deducts
		// the speed of the resource transfer.
		#kasLOC_12009 = 搬送速度の自動調整
		// The GUI hint that explains what will happen if the auto-speed options is chosen.
		#kasLOC_12010 = 速度は移送が <<1>> 秒で終了するように設定されます
		// The hint text to explain the button action that starts transferring the resource
		// from the connected vessel to the owner of the resource transfer part.
		#kasLOC_12011 = 所有者機体へ燃料の移送を実施する
		// The hint text to explain the button action that does transferring the resource
		// from the connected vessel to the owner of the resource transfer part. When the
		// button is released, the transfer stops.
		#kasLOC_12012 = 所有者機体へ燃料の移送を実施
		// The hint text to explain the button action that starts transferring the resource
		// from the owner of the resources transfer part to the connected vessel.
		#kasLOC_12013 = 所有者機体から燃料の移送を実施
		// The hint text to explain the button action that does transferring the resource
		// from the owner of the resource transfer part to the connected vessel. When the
		// button is released, the transfer stops.
		#kasLOC_12014 = 所有者機体から燃料の移送を実施
		// The message to present in the transfer dialog when the parts are docked. Hence,
		// the stock game functionality must be used to transfer the resources.
		#kasLOC_12016 = ドッキングモードでは使用不可
		// The message to present when there are no resources that can be transferred in any
		// direction between the vessels.
		#kasLOC_12017 = 移送する資源が存在しません

		// ********** Type: KAS.KASLinkSourceBase, KSPDev Messages

		// Message to display when the target link type doesn't match the source type.
		#kasLOC_02000 = ターゲットのリンクタイプが非互換
		// Message to display when a source is refusing to start the link.
		#kasLOC_02001 = リンクがソースを利用できません
		// Message to display when the target is refusing to accept the link.
		#kasLOC_02002 = ターゲットはリンクを受け付けません
		// Message to display when a linked source and target cannot be matched on load.
		// Argument <<1>> is a name of the SOURCE part.
		// Example usage:
		// Cannot restore link for: KAS.TJ1
		#kasLOC_02003 = リンクを復元できない: <<1>>
		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_02004 = 次のソケットタイプでリンク: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_02005 = KAS 接続ソース
		// The name of the part's context menu event that triggers a separation of the
		// linked parts into two different vessels if they are coupled thru this link. At
		// the same time, the name of the event gives a currently selected state.
		#kasLOC_02006 = リンクモード: ドッキングした
		// The name of the part's context menu event that triggers a merging of the linked
		// parts if they were not coupled before. At  the same time, the name of the event
		// gives a currently selected state.
		#kasLOC_02007 = リンクモード: ドッキング解除された
		// Message to display when the target is refusing to couple (dock) with the link
		// source.
		#kasLOC_02008 = ターゲットがドッキングを拒否
		// Message to display when a linked part becomes a target to EVA construction move
		// or detach operation.
		#kasLOC_02009 = ターゲットのEVA構造化によるリンク解除
		// Message to display when an interactive link mode is being enabled while the stock
		// EVA construction mode is active. In this mode the KAS interactive links are
		// completely disabled to not interfere with the stock game functionality.
		#kasLOC_02010 = EVA構築モードではインタラクティブリンクは使用できません

		// ********** Type: KAS.KASLinkSourceInteractive, KSPDev Messages

		// The message to display when a compatible target part is hovered over, and the
		// source is in the linking mode.
		// Argument <<1>> is the possible link length of type DistanceType.
		// Example usage:
		// Click to establish a link (length 1.22 m)
		#kasLOC_01000 = クリックでリンクが確立されます(長さ <<1>>)
		// The message to display as a help string when an interactive linking mode has
		// started.
		#kasLOC_01001 = 対応するソケットを選択するか、ESCキーを押す
		// The message to present when the player requests a docking mode for the link via
		// UI, but the source or target part is rejecting the action.
		#kasLOC_01002 = ドック不可: そのモードはサポートされていません

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Events

		// A context menu event that attaches the connector to the EVA kerbal.
		#kasLOC_13007 = コネクタを掴む
		// A context menu event that detaches the connector from the kerbal and puts it back
		// to the winch.
		#kasLOC_13008 = コネクタを戻す
		// Context menu item to break the currently established link.
		#kasLOC_13009 = コネクタを取り外す
		// Advanced tweakable. Context menu item to instantly lock the deployed connector
		// into the base.
		#kasLOC_13010 = コネクタをロック

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Fields

		// Status field to display the current winch connector status in the context menu.
		#kasLOC_13006 = コネクタの状態

		// ********** Type: KAS.KASLinkSourcePhysical, KSPDev Messages

		// A string in the context menu that tells that the connector is rigidly attached to
		// the part and is not movable.
		#kasLOC_13000 = ロックされた
		// A string in the context menu that tells that the connector is deployed and
		// attached to the part via a cable.
		#kasLOC_13001 = 展開された
		// A string in the context menu that tells that the connector is plugged in a socked
		// or is being carried by a kerbal, and attached to the part via a cable.
		#kasLOC_13002 = プラグインされた
		// A string in the context menu that tells that the connector is rigidly attached in
		// the winch socked, and the vessel on the connector is docked to the part owner
		// vessel.
		#kasLOC_13003 = ドッキングされた
		// A message to display when a link between the part and the connector has broke due
		// to the unexpected external forces or actions.
		#kasLOC_13004 = コネクタと部品のリンクが切断された
		// The error message to present when a part is being attached externally to the
		// source's attach node, and it's not a valid link target for the source.
		// Argument <<1>> is the name of the part being attached.
		#kasLOC_13005 = リンクできません: <<1>>

		// ********** Type: KAS.KASLinkTargetBase, KSPDev Messages

		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_03000 = このタイプのリンクを許可: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_03001 = KAS 接続ターゲット

		// ********** Type: KAS.KASLinkTargetKerbal, KSP Events

		// A context menu item that picks up the cable connector in range.
		#kasLOC_10000 = コネクタを拾う

		// ********** Type: KAS.KASLinkTargetKerbal, KSPDev Messages

		// A hint string, instructing what to press in order to drop the currently
		// carriedcable connector.
		// Argument <<1>> is the current key binding of type KeyboardEventType.
		// Example usage:
		// To drop the connector press: [Ctrl+Y]
		#kasLOC_100001 = コネクタを捨てるには次を押す: [<<1>>]
		// A hint string, instructing what to press in order to pickup a cable
		// connectorwhich is currently in range.
		// Argument <<1>> is the current key binding of typeKeyboardEventType.
		// Example usage:
		// [Y]: Pickup connector
		#kasLOC_100002 = [<<1>>]: コネクタを拾う
		// Context menu item that appear on the target part and transfers the EVA carried
		// connector to it.
		#kasLOC_10003 = コネクタを接続

		// ********** Type: KAS.KASLinkWinch, KSP Actions

		// Name of the action that starts the cable extending.
		#kasLOC_08015 = ケーブルを伸ばす
		// Name of the action that starts the cable retracting.
		#kasLOC_08016 = ケーブルを戻す
		// Name of the action that stops the motor.
		#kasLOC_08017 = モーターを停止
		// Name of the action that sets the cable length to the maximum, and unlocks the
		// connector if it was locked.
		#kasLOC_08018 = ケーブルを開放

		// ********** Type: KAS.KASLinkWinch, KSP Events

		// A context menu item that opens the remote control GUI to operate the winches in
		// the scene.
		#kasLOC_08010 = ウィンチのGUIを開く
		// A context menu item that sets the cable length to the maximum, and unlocks the
		// connector if it was locked.
		#kasLOC_08011 = ケーブルを開放
		// A context menu event that sets the cable length to the current distance to the
		// connector.
		#kasLOC_08012 = ケーブルをストレッチ
		// Name of the action that triggers the ejection of the connector. The connector
		// gets thrown towards its forward direction with a force.
		#kasLOC_08020 = コネクタを分離

		// ********** Type: KAS.KASLinkWinch, KSP Fields

		// A context menu item that presents the length of the currently deployed cable.
		#kasLOC_08009 = 展開されたケーブル長

		// ********** Type: KAS.KASLinkWinch, KSPDev Messages

		// Error message to present when the electricity charge has exhausted.
		#kasLOC_08000 = エネルギー無し!
		// Error message to present when an improperly aligned cable connector has attempted
		// to lock with the winch.
		#kasLOC_08001 = コネクタをロックできない: 位置がずれている
		// Info message to present when a cable connector has successfully locked to the
		// winch.
		#kasLOC_08002 = コネクタをロックした!
		// Info message to present when a cable connector has successfully docked to the
		// winch.
		#kasLOC_08003 = コネクタがウィンチに接続された
		// An info message to present when the cable is extended at its maximum length.
		// Argument <<1>> is the current cable length of type DistanceType.
		// Example usage:
		// Maximum cable length reached: 1.23 m
		#kasLOC_08004 = 最大ケーブル長に達した: <<1>>
		// Name of the context menu item that stops the cable extending.
		#kasLOC_08005 = 伸展を停止
		// Name of the context menu item that starts the cable extending.
		#kasLOC_08006 = ケーブルを伸展
		// Name of the context menu item that stops the cable retracting.
		#kasLOC_08007 = 巻き戻しを停止
		// Name of the context menu item that starts the cable retracting.
		#kasLOC_08008 = ケーブルを巻き戻し
		// Title of the module to present in the editor details window.
		#kasLOC_08013 = KAS ウィンチ
		// Info string that tells how fast the winch can extend or retract the cable.
		// Argument <<1>> is the speed of type VelocityType.
		#kasLOC_08014 = 最大モーター速度: <<1>>
		// Info string that tells what force the winch will apply on an ejected head when
		// requested.
		// Argument <<1>> is the force of type ForceType.
		#kasLOC_08019 = コネクタ分離力: <<1>>

		// ********** Type: KAS.KASModuleDart, KSPDev Messages

		// Title of the module to present in the editor details window.
		#kasLOC_14000 = KAS ダート
		// Info string that tells how strong must be the impact to have the attachment
		// established.
		// Argument <<1>> is the force of type ForceType.
		#kasLOC_14001 = 必要な衝撃力: <<1>>
		// Info string that tells how strong is the surface attachment if this kind is
		// allowed for the part.
		// Argument <<1>> is the force of type ForceType.
		#kasLOC_14002 = 表面との接続の強さ: <<1>>
		// Info string that indicates that the dart can attach to a vessel part.
		#kasLOC_14003 = パーツと接続
		// Info string that indicates that the dart can attach to a celestial body.
		#kasLOC_14004 = 表面と接続
		// Info string that indicates that the dart can attach to space object like an
		// asteroid or a comet.
		#kasLOC_14005 = 小惑星もしくは彗星と接続

		// ********** Type: KAS.KASRendererTelescopicPipe, KSP Events

		// A context menu item that expands a non-linked telescopic pipe to its maximum
		// length.
		#kasLOC_04002 = 最大まで伸展
		// A context menu item that shrinks a non-linked telescopic pipe to its minimum
		// length.
		#kasLOC_04003 = 最小まで戻す

		// ********** Type: KAS.KASRendererTelescopicPipe, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_04000 = リンクが塞がれている: <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_04001 = リンクが表面によって塞がれている

		// ********** Global strings

		// Small strut link type.
		#kasLOC_99000 = パイプ-40
		// Small cable link type.
		#kasLOC_99001 = ケーブル-10
		// Small hose link type.
		#kasLOC_99002 = ホース-30
		// Medium strut link type.
		#kasLOC_99003 = パイプ-100
		// Medium cable link type.
		#kasLOC_99004 = ケーブル-35
		// Medium hose link type.
		#kasLOC_99005 = ホース-70
		// Large strut link type.
		#kasLOC_99006 = パイプ-150
		// Large cable link type.
		#kasLOC_99007 = ケーブル-60
		// Large hose link type.
		#kasLOC_99008 = ホース-100

		// KAS parts filter in the editor.
		#kasLOC_99009 = Kerbal Attachment System

		// Regular crew corridor (MdCorridor).
		#kasLOC_99010 = Corridor-1000
		// Large crew corridor (LgCorridor).
		#kasLOC_99011 = Corridor-1500
	}
}
